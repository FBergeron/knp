#=============================================================================
#
#	GNU make "Makefile" for KN-PARSER (Dictionary Database)
#
#		1995/07/10  Sadao Kurohashi (kuro@kuee.kyoto-u.ac.jp)
#
#=============================================================================

#----------------------------------------
#	Search Paths
#----------------------------------------

KNP_DIR  := /share/tool/knp
TEMPDIR  := /tmp
MAKE_DB  := ../system/make_db

BGH_FILE    := /share/dict/bgh/monitor/sakuin
EDR_FILE    := /share/dict/EDR/tdict/jwd/JWD.DIC
IPALV1_FILE := /share/dict/ipal/orig/dousi1/dousi1.txt
IPALV2_FILE := /share/dict/ipal/orig/dousi2/dousi2.txt
IPALA1_FILE := /share/dict/ipal/orig/keiyou/keiyou1.txt
IPALA2_FILE := /share/dict/ipal/orig/keiyou/keiyou2.txt
IPALN_DIR   := /share/dict/ipal_noun_31/3.1/data

KNP_SYS  := $(KNP_DIR)/system
KNP_DICT := $(KNP_DIR)/dict

#----------------------------------------
#	Compiler Options
#----------------------------------------

RMF       := rm -f

#----------------------------------------
#	Suffixes
#----------------------------------------

O         := o

#----------------------------------------
#	Default Targets
#----------------------------------------

all : make_dir make_database make_hashdb

#----------------------------------------
#	Target(0): make_dir
#----------------------------------------

make_dir :
	if [ ! -d bgh ]; then \
		mkdir bgh; \
	fi
	if [ ! -d scase ]; then \
		mkdir scase; \
	fi
	if [ ! -d ipal ]; then \
		mkdir ipal; \
	fi
	if [ ! -d sm ]; then \
		mkdir sm; \
	fi

#----------------------------------------
#	Target(1): make_database
#----------------------------------------

make_database :
	if [ -f "$(BGH_FILE)" ]; then \
		nkf -S -e < "$(BGH_FILE)" | src/bgh.pl > bgh/bgh.dat; \
	fi
	if [ -f "$(EDR_FILE)" ]; then \
		src/edr.pl < "$(EDR_FILE)" > scase/scase.dat; \
	fi
	if [ -f "$(IPALV1_FILE)" -a "$(IPALV2_FILE)" ]; then \
		cat $(IPALV1_FILE) $(IPALV2_FILE) | src/ipalv.pl > ipal/ipalv.dat; \
	fi
	if [ -f "$(IPALA1_FILE)" -a "$(IPALA2_FILE)" ]; then \
		src/ipala.pl $(IPALA1_FILE) $(IPALA2_FILE) > ipal/ipala.dat; \
	fi
	if [ -n "$(IPALN_DIR)" -a -d "$(IPALN_DIR)" ]; then \
		cat $(IPALN_DIR)/n31.* | src/ipals.pl | src/ipals_add_voice.pl > ipal/ipals.dat; \
	fi
	if [ -f ipal/ipalv.dat -o -f ipal/ipals.dat -o -f ipal/ipala.dat ]; then \
		cat ipal/ipalv.dat ipal/ipals.dat ipal/ipala.dat | src/ipal ipal/ipal.idx ipal/ipal.dat; \
		cat ipal/ipalv.dat ipal/ipals.dat ipal/ipala.dat | src/ipal2scase.pl >> scase/scase.dat; \
	fi

#----------------------------------------
#	Target(2): make_hashdb
#----------------------------------------

make_hashdb :
	if [ -f bgh/bgh.dat ]; then \
		$(MAKE_DB) $(TEMPDIR)/bgh < bgh/bgh.dat; \
		mv $(TEMPDIR)/bgh bgh/bgh; \
	fi
	if [ -f sm/word2code.dat ]; then \
		$(MAKE_DB) $(TEMPDIR)/word2code < sm/word2code.dat; \
		mv $(TEMPDIR)/word2code sm/word2code; \
	fi
	if [ -f sm/sm2code.dat ]; then \
		$(MAKE_DB) $(TEMPDIR)/sm2code < sm/sm2code.dat; \
		mv $(TEMPDIR)/sm2code sm/sm2code; \
	fi
	if [ -f sm/code2sm.dat ]; then \
		$(MAKE_DB) $(TEMPDIR)/code2sm < sm/code2sm.dat; \
		mv $(TEMPDIR)/code2sm sm/code2sm; \
	fi
	if [ -f sm/smp2smg.dat ]; then \
		$(MAKE_DB) $(TEMPDIR)/smp2smg -append / < sm/smp2smg.dat; \
		mv $(TEMPDIR)/smp2smg sm/smp2smg; \
	fi
	if [ -f scase/scase.dat ]; then \
		$(MAKE_DB) $(TEMPDIR)/scase -or < scase/scase.dat; \
		mv $(TEMPDIR)/scase scase/scase; \
	fi
	if [ -f ipal/ipal.idx ]; then \
		$(MAKE_DB) $(TEMPDIR)/ipal -append / < ipal/ipal.idx; \
		mv $(TEMPDIR)/ipal ipal/ipal; \
	fi

#----------------------------------------
#	Target(3): clean
#----------------------------------------

clean : clean_db

clean_db :
	$(RMF) bgh/*
	$(RMF) scase/*
	$(RMF) ipal/* 

#=============================================================================
