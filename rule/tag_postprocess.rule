;;; -*- Emacs-Lisp -*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;	  □■□ ＫＮＰ文法規則 : tag_postprocess.rule □■□
;;
;;	働き：基本句の後処理
;;
;;	ルール：( (前方基本句列) (自身の基本句) (後方基本句列) FEATURE列 )
;;			※ 中央の「基本句」にFEATURE列が与えられる
;;
;;	適用方法：全ルールを前から順に，文中の後ろの基本句から順に
;;			※ マッチしてもBREAKなし
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Ｔマージ←     対象の基本句を直前の基本句にマージする
;;; Ｔ基本句分解   対象の基本句を分解する
;;; &形態素付属化  マージする形態素列は<付属>に変える
;;; &伝搬:-1       <係:..>, <レベル:..>, <ID:..>は直前の基本句に伝搬する


;;; 判定詞を独立した基本句にする(-copula)
( ( ?* ) ( < ( ?* [* * * * * ((後処理-基本句始))] ?* ) > ) ( ?* ) Ｔ基本句分解 )
( ( ?* ) ( < ( ?* ) ((&受側チェック:Ｔ基本句分解)) > ) ( ?* ) Ｔ受側基本句分解 )


;;; 複合辞
( ( ?* ) ( < ( ?* ) ((複合辞)) > ) ( ?* ) Ｔマージ← &形態素付属化 &伝搬:-1:係 &伝搬:-1:レベル &伝搬:-1:ID &伝搬:-1:Ｔ受側基本句分解 )

;;; 「〜のは」
( ( ?* ) ( < ( ?* [* * * * * ((独立タグ非見出語))] ?* ) > ) ( ?* ) Ｔマージ← &形態素付属化 &伝搬:-1:係 &伝搬:-1:レベル &伝搬:-1:ID &伝搬:-1:Ｔ受側基本句分解 )

;;; 「〜する予定です」
( ( ?* < ( ?* ) ((用言:動)) > ) ( < ( ?* [名詞 * * * 予定] ?* ) ((用言:判)) > ) ( ?* ) Ｔマージ← &形態素付属化 &伝搬:-1:係 &伝搬:-1:レベル &伝搬:-1:ID &伝搬:-1:Ｔ受側基本句分解 )
